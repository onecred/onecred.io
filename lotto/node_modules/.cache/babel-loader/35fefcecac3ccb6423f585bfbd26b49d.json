{"ast":null,"code":"var _jsxFileName = \"/Users/pds/GitHub/udemy/smart_contracts/lottery-react/src/App.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport web3 from \"./web3\";\nimport lottery from \"./lottery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      manager: '',\n      players: [],\n      balance: '',\n      value: '',\n      message: ''\n    };\n\n    this.onSubmit = async event => {\n      //Prevents the action from happening by default when loading a page\n      event.preventDefault();\n      const accounts = await web3.eth.getAccounts(); //Don't forget to intialize the component at the top of the class!\n\n      this.setState({\n        message: 'Waiting on transaction success...'\n      });\n      await lottery.methods.enter().send({\n        //assumes the first address from the array of accounts is the one to be used to enter the lottery\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value, 'ether')\n      });\n      this.setState({\n        message: 'You have been entered!'\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const manager = await lottery.methods.manager().call();\n    const players = await lottery.methods.getPlayers().call(); //Where the fuck does .options.address come from? is this a web3 function?\n\n    const balance = await web3.eth.getBalance(lottery.options.address);\n    this.setState({\n      manager,\n      players,\n      balance\n    });\n  } //Event handler\n  //Using an arrow function will prevent us from needing to worry about the property of .this in a render function\n\n\n  // onSubmit = aysnc (event) => {\n  //   //Prevents the action from happening by default when loading a page\n  //   event.preventDefault();\n  //   const accounts = await web3.eth.getAccounts();\n  //   //Don't forget to intialize the component at the top of the class!\n  //   this.setState({message: 'Waiting on transaction success...'})\n  //   await lottery.methods.enter().sned({\n  //     //assumes the first address from the array of accounts is the one to be used to enter the lottery\n  //     from: accounts[0],\n  //     value: web3.utils.toWei(this.state.value, 'ether')\n  //   });\n  //   this.setState({message : 'You have been entered!'})\n  // };\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lottery Contract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"This contract is managed by \", this.state.manager, \". There are currently \", this.state.players.length, \" people entered, competing to win \", web3.utils.fromWei(this.state.balance, 'ether'), \" ether!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Want to try your luck?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount of ether to enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.value,\n            onChange: event => this.setState({\n              value: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [this.state.message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/pds/GitHub/udemy/smart_contracts/lottery-react/src/App.js"],"names":["React","web3","lottery","App","Component","state","manager","players","balance","value","message","onSubmit","event","preventDefault","accounts","eth","getAccounts","setState","methods","enter","send","from","utils","toWei","componentDidMount","call","getPlayers","getBalance","options","address","render","length","fromWei","target"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport web3 from \"./web3\";\nimport lottery from \"./lottery\";\n\nclass App extends React.Component {\n  state = {\n    manager: '',\n    players: [],\n    balance : '',\n    value : '',\n    message: ''\n  };\n  \n  async componentDidMount() {\n    const manager = await lottery.methods.manager().call();\n    const players = await lottery.methods.getPlayers().call();\n    //Where the fuck does .options.address come from? is this a web3 function?\n    const balance = await web3.eth.getBalance(lottery.options.address);\n\n    this.setState({manager, players, balance});\n  }\n//Event handler\n//Using an arrow function will prevent us from needing to worry about the property of .this in a render function\n  onSubmit = async (event) => {\n    //Prevents the action from happening by default when loading a page\n    event.preventDefault();\n    \n    const accounts = await web3.eth.getAccounts();\n\n    //Don't forget to intialize the component at the top of the class!\n    this.setState({message: 'Waiting on transaction success...'})\n    await lottery.methods.enter().send({\n      //assumes the first address from the array of accounts is the one to be used to enter the lottery\n      from: accounts[0],\n      value: web3.utils.toWei(this.state.value, 'ether')\n\n    });\n\n    this.setState({message : 'You have been entered!'})\n  };\n\n\n  // onSubmit = aysnc (event) => {\n  //   //Prevents the action from happening by default when loading a page\n  //   event.preventDefault();\n    \n  //   const accounts = await web3.eth.getAccounts();\n\n  //   //Don't forget to intialize the component at the top of the class!\n  //   this.setState({message: 'Waiting on transaction success...'})\n  //   await lottery.methods.enter().sned({\n  //     //assumes the first address from the array of accounts is the one to be used to enter the lottery\n  //     from: accounts[0],\n  //     value: web3.utils.toWei(this.state.value, 'ether')\n\n  //   });\n\n  //   this.setState({message : 'You have been entered!'})\n  // };\n\n\n\n\n  render() {\n    return (\n     <div>\n       <h2>Lottery Contract</h2>\n       <p> \n         This contract is managed by {this.state.manager}.\n         There are currently {this.state.players.length} people entered,\n         competing to win {web3.utils.fromWei(this.state.balance, 'ether')} ether!\n       </p>\n        <hr></hr>\n       <form onSubmit={this.onSubmit}>\n         <h4>\n           Want to try your luck?\n         </h4>\n         <div>\n           <label>Amount of ether to enter</label>\n           <input\n           value = {this.state.value}\n           onChange={event => this.setState({value: event.target.value})}\n           />\n         </div>\n         <button>\n           Enter\n         </button>\n       </form>\n       <h3></h3>\n      <h1>{this.state.message} </h1>\n     </div>\n\n    );\n  };\n  };\n\n\n  \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}